:root {
  --default-color: #ddd;
  --default-accent-color: red;
}

html, body {
  margin: 0;
  padding: 0;
  height: 100%;
  width: 100%;

  font-family: Verdana, sans-serif;
  font-size: large;

  background-color: hsl(215, 28%, 8%);
  color: var(--default-color);
}

h1 {
  text-align: center;
}

::-webkit-scrollbar {
  width: .75em;
  height: .75em;
}

::-webkit-scrollbar-thumb {
  background-color: var(--default-color);
  border-radius: .5em;
}

::-webkit-scrollbar-corner {
  background: transparent;
}

::-webkit-scrollbar-track {
  background-color: hsl(215, 22%, 12%);
  border-radius: .5em;
}

@media (hover) {
  .cardText {
    transform: translateY(calc(100% - 3.4em));
    transition: transform 500ms;
  }

  .cardText>*:not(.cardTitle) {
    opacity: 0;
    transition: opacity 500ms linear;
  }
}

@media screen and (max-width: 80em) {
  body {
    font-size: xx-large !important;
  }

  .cardTitle {
    font-size: 2rem !important;
  }
}

#mainContainer {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

.cardContainer {
  position: relative;
  width: 13em;
  margin: 1em;
  border-radius: .5em;
  aspect-ratio: calc(2 / 3);
  overflow: hidden;
  background-repeat: no-repeat;
  background-size: cover;
  transition: transform 500ms;
  cursor: pointer;

  --accent-color: var(--default-accent-color);
}

.cardContainer:hover,
.cardContainer:focus-within {
  transform: scale(1.1);
}

.cardContainer:hover .cardText,
.cardContainer:focus-within .cardText {
  transform: translateY(0);
}

.cardContainer:hover .cardTitle::before,
.cardContainer:focus-within .cardTitle::before {
  transform: scaleX(1) translateX(-.2em);
  transition-delay: 200ms;
}

.cardContainer:hover .cardText>*,
.cardContainer:focus-within .cardText>* {
  opacity: 1;
}

.cardContainer:focus-within .cardText {
  transition-duration: 0ms !important;
}

.cardLibContainer {
  display: flex;
  justify-content: space-around;
  position: absolute;
  top: 1em;
  right: 0;
  height: 1.4em;
  width: 5em;
  background-color: var(--accent-color);
}

.cardText {
  position: absolute;
  width: calc(100% - 2em);
  bottom: 0;
  padding: 1em;
  padding-bottom: 0;
  background: linear-gradient(hsl(0 0% 0% / 0),
      hsl(0 0% 0% / 0.4) 17%,
      hsl(0 0% 0% / 0.7) 40%,
      hsl(0 0% 0% / 1));
}

.cardTitle {
  position: relative;
  display: block;
  width: 100%;
  padding-right: 10%;
  margin-bottom: 1em;
  font-size: 1.2rem;
}

.cardTitle::before {
  content: "";
  position: absolute;
  height: .23em;
  bottom: -.225em;
  width: 110%;
  background-color: var(--accent-color);
  transform: scaleX(0);
  transition: transform 500ms;
  transition-delay: 100ms;
  transform-origin: right;
}

.actionContainer {
  display: flex;
  justify-content: space-around;
  align-items: center;
  padding: 1em 0;
}

.defaultButton {
  background: unset;
  border: unset;
  color: inherit;
  font-family: inherit;
  font-size: inherit;

  height: 1.5em;
  width: 1.5em;
  border-radius: 50%;
  padding: 1.2em;
  background-position: center;
  background-repeat: no-repeat;
  background-size: 75%;
  cursor: pointer;
  transition: 200ms;
}

.defaultButton:hover {
  background-color: #fff3 !important;
}

.defaultButton:active {
  background-color: #fff5 !important;
}

.actionOpen {
  height: 2em;
  width: 2em;
  padding: 1.5em;
  background-image: url(assets/icons/open-outline.svg);
}

.actionCode {
  background-image: url(assets/icons/code-slash-outline.svg);
}

.actionInfo {
  background-image: url(assets/icons/information-outline.svg);
}